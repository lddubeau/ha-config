# Design notes: we need to have a system that allows for failures to detect
# state changes. An early version of this system would emit events when the
# louis_is_awake boolean changed, but that does not let us fix mistakes.

input_boolean:
  louis_wake_alarm_dismissed:
    # This boolean input is meant to be triggered from Automate/Tasker etc, when
    # Louis has dismissed his wake up alarm.
    name: "Louis' Waking Alarm Was Dismissed"
  # NEVER EVER SET THIS VARIABLE DIRECTLY, unless you are fixing an incorrect
  # wake state and you don't want events to be generated.
  louis_is_awake:
    name: "Louis is Awake"

script:
  louis_woke_up:
    alias: Louis Woke Up
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.louis_is_awake
      - event: louis_woke_up
  louis_went_to_sleep:
    alias: Louis Sent To Sleep
    sequence:
      - service: input_boolean.turn_off
        entity_id: input_boolean.louis_is_awake
      - event: louis_went_to_sleep

automation:
  # Detect that Louis woke up today.
  - alias: "Louis' Waking Alarm Was Dismissed"
    trigger:
      platform: state
      entity_id: input_boolean.louis_wake_alarm_dismissed
      to: "on"
    action:
      - service: script.louis_woke_up
      # We must reset our alarm.
      - service: input_boolean.turn_off
        entity_id: input_boolean.louis_wake_alarm_dismissed
  # Turn the lights on when the event has been generated.
  - alias: "Turn on lights when Louis wakes up"
    trigger:
      platform: event
      event_type: louis_woke_up
    condition:
      # Turn the lights on only if it is dark inside.
      - condition: state
        entity_id: binary_sensor.dark_inside
        state: "on"
      # And only if Louis is not away
      - condition: state
        entity_id: binary_sensor.louis_away
        state: "off"
    action:
      service: light.turn_on
      entity_id: group.living_room
  # Turn the night stand light off when the event has been generated.
  - alias: "Turn off night stand light when Louis goes to sleep"
    trigger:
      platform: event
      event_type: louis_went_to_sleep
    condition:
      # Only if Louis is not away
      - condition: state
        entity_id: binary_sensor.louis_away
        state: "off"
    action:
      service: light.turn_off
      entity_id: light.louis_bedside_lamp
