notify:
  - name: sink_temperature_notify_group
    platform: group
    services:
      - service: living_room_tv
      - service: basement_tv
      - service: mobile_app_chromebook
      - service: mobile_app_pixel_4a
      - service: mobile_app_pixel_3

sensor:
  - platform: template
    sensors:
      next_rising:
        friendly_name: 'Next Rising of the Sun'
        value_template: >-
          {{ as_timestamp(states.sun.sun.attributes.next_rising) | 
             timestamp_custom(' %I:%M %p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-up
      next_setting:
        friendly_name: 'Next Setting of the Sun'
        value_template: >-
          {{ as_timestamp(states.sun.sun.attributes.next_setting) |
             timestamp_custom(' %I:%M %p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-down

binary_sensor:
  platform: template
  sensors:
    temperature_too_low:
      friendly_name: The Temperature is Too Low
      device_class: safety
      value_template: >-
        {{ states("sensor.weather_daily_forecast_temperature_low") |
           float <= 23 }}

input_boolean:
  guest_bathroom_sink_faucet:
    name: "The Sink Faucet in the Guest Bathroom"
  sink_warning_delivered:
    name: "Warned the User about the Sink Today"
  sink_warning_silenced:
    name: "Silenced the Sink Warning"

script:
  notify_sink_faucet_can_be_turned_on:
    alias: Notify That the Guest Bathroom Sink is Cold
    variables:
      message: "Turn on the guest bathroom sink faucet."
      action: guest_bathroom_sink_faucet_turned_on
      silence_action: silence_sink_warning
    sequence:
      - service: notify.sink_temperature_notify_group
        data:
          message: "{{ message }}"
          data:
            ttl: 0
            priority: high
            actions:
              - action: "{{ action }}"
                title: Done
              - action: "{{ silence_action }}"
                title: Silence
      - service: persistent_notification.create
        data:
          message: "{{ message }}"
          notification_id: guest_bathroom_sink_faucet
      - service: input_boolean.turn_on
        entity_id: input_boolean.sink_warning_delivered  
  notify_sink_faucet_can_be_turned_off:
    alias: Notify That the Guest Bathroom Sink Can be Turned Off
    variables:
      message: "Turn off the guest bathroom sink faucet."
      action: guest_bathroom_sink_faucet_turned_off
      silence_action: silence_sink_warning
    sequence:
      - service: notify.sink_temperature_notify_group
        data:
          message: "{{ message }}"
          data:
            ttl: 0
            priority: high
            actions:
              - action: "{{ action }}"
                title: Done
              - action: "{{ silence_action }}"
                title: Silence
      - service: persistent_notification.create
        data:
          message: "{{ message }}"
          notification_id: guest_bathroom_sink_faucet
      - service: input_boolean.turn_on
        entity_id: input_boolean.sink_warning_delivered  
    
automation:
  - alias: The Temperature is too Low
    trigger:
      - platform: state
        entity_id: binary_sensor.temperature_too_low
        to: "on"
      - platform: state
        entity_id: input_boolean.sink_warning_delivered
        to: "off"
      - platform: time_pattern
        hours: /1
      - platform: time
        at: "00:08:00"
    # True if:
    #  - the warning hasn't be silenced and
    #  - the sensor says the temperature is too low and,
    #  - hour greater or equal to 8 and,
    #      - the trigger platform is state or time and
    #      - the message has not be delivered,
    #    - or
    #      - the sink faucet is off,
    #      - the time is between 16 and 23.
    condition: >-
      {% set hour = as_local(now()).hour %}
      {{ (not is_state('input_boolean.sink_warning_silenced', 'on') and
          is_state('binary_sensor.temperature_too_low', 'on') and
          (hour >= 8)) and 
         (((trigger.platform in ("state", "time")) and
           not is_state('input_boolean.sink_warning_delivered',
                        'on')) or
          (is_state('input_boolean.guest_bathroom_sink_faucet',
                    'off') and
           (hour > 16) and
           (hour < 23))) }}
    action:
      - service: script.notify_sink_faucet_can_be_turned_on
  - alias: Can Turn Off the Sink
    trigger:
      - platform: state
        entity_id: input_boolean.guest_bathroom_sink_faucet
        to: "on"
      - platform: state
        entity_id: input_boolean.sink_warning_delivered
        to: "off"
      - platform: time_pattern
        hours: /1
    # We want the warning to only come betwen 9 and 12, inclusively.
    condition: >-
      {% set hour = as_local(now()).hour %}
      {{ not is_state('input_boolean.sink_warning_silenced', 'on') and
         (is_state('input_boolean.guest_bathroom_sink_faucet',
                   'on') and
          (hour > 8) and
          (hour < 13)) }}
    action:
      - service: script.notify_sink_faucet_can_be_turned_off
  - alias: "Turned On Has Been Fired"
    trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: guest_bathroom_sink_faucet_turned_on
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.guest_bathroom_sink_faucet
  - alias: "Turned Off Has Been Fired"
    trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: guest_bathroom_sink_faucet_turned_off
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.guest_bathroom_sink_faucet
  - alias: "Silence Has Been Fired"
    trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: silence_sink_warning
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.sink_warning_silenced
  - alias: "Reset sink_warning_silenced"
    mode: single
    trigger:
      platform: time
      at: "00:00:01"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.sink_warning_silenced
  - alias: "Reset sink_warning_delivered"
    mode: single
    trigger:
      platform: time
      at: "00:09:00"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.sink_warning_delivered  

          
